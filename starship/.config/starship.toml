# Starship Configuration
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Timeout for commands (in milliseconds)
command_timeout = 1000

# Format string - defines the prompt structure
format = """
$directory$git_branch$git_status$git_state
$package$rust$python$aws$cmd_duration$character
"""

[character]
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"

[directory]
format = "[$path]($style)[$read_only]($read_only_style) "
style = "bold cyan"
truncation_length = 0
truncate_to_repo = false
read_only = " 🔒"

[git_branch]
format = "on[$symbol$branch]($style) "
symbol = " "
style = "bold purple"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'
style = "bold yellow"
conflicted = "⚠️"
ahead = "⇡${count}"
behind = "⇣${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
untracked = "?${count}"
stashed = "📦${count}"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
style = "bright-black"

[package]
format = "[$symbol$version]($style) "
symbol = "📦 "
style = "bold 208"
display_private = false

[rust]
format = "[$symbol$version]($style) "
symbol = "🦀 "
style = "bold red"

[python]
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
symbol = "🐍 "
style = "bold yellow"
pyenv_version_name = false
detect_extensions = []
detect_files = [".python-version", "Pipfile", "pyproject.toml", "requirements.txt", "setup.py", "tox.ini"]

[aws]
format = 'on [$symbol $region]($style) '
symbol = "☁️"
style = "bold yellow"
disabled = true

[cmd_duration]
min_time = 2000
format = "took [$duration]($style) "
style = "bold yellow"
show_milliseconds = false
